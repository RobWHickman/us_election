name: Rust Build and Run

on:
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      BY_MARKET: ${{ secrets.BY_MARKET }}
      RETURN: ${{ secrets.RETURN }}
      UK_LOCALISATION: ${{ secrets.UK_LOCALISATION }}
      ROLL_UP: ${{ secrets.ROLL_UP }}
      MARKET_TYPES: ${{ secrets.MARKET_TYPES }}
      PSQL_STR: ${{ secrets.PSQL_STR }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache target dependencies
        uses: actions/cache@v3
        with:
          path: |
            target/release/deps
            target/release/incremental
            target/release/us_election
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml', 'Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build project (if necessary)
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo build --release

      - name: Run project
        run: ./target/release/us_election
